----------------------------------------------------------------------------------
@Sayak
Given a 32-bit signed integer, reverse digits of an integer.
Assume we are dealing with an environment which could only store integers within
the 32-bit signed integer range: [−2^(31),  2^(31) − 1]. For the purpose of this problem,
assume that your function returns 0 when the reversed integer overflows.
----------------------------------------------------------------------------------


class Solution {
    public int reverse(int x) {
        
        long rev=0;
        while(x!=0)
        {
            rev=(rev*10)+x%10;
            x/=10;
        if(rev>Integer.MAX_VALUE || rev<Integer.MIN_VALUE)   
        {
            return 0;
        }
        
        }
    return (int)rev;
    }
}
